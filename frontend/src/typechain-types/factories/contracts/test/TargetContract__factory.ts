/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TargetContract,
  TargetContractInterface,
} from "../../../contracts/test/TargetContract";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
    ],
    name: "ValueChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "getValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "setValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "value",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506101498061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806320965255146100465780633fa4f2451461005c5780635524107714610065575b600080fd5b6000545b60405190815260200160405180910390f35b61004a60005481565b6100786100733660046100fa565b61007a565b005b600081116100bf5760405162461bcd60e51b815260206004820152600e60248201526d4e6f6e2d7a65726f2076616c756560901b604482015260640160405180910390fd5b60008190556040518181527f93fe6d397c74fdf1402a8b72e47b68512f0510d7b98a4bc4cbdf6ac7108b3c599060200160405180910390a150565b60006020828403121561010c57600080fd5b503591905056fea264697066735822122062a845961face2e0349a3398de2e6cd2f6d6f4240e09ca518c2150af22b638b664736f6c634300081c0033";

type TargetContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TargetContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TargetContract__factory extends ContractFactory {
  constructor(...args: TargetContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TargetContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TargetContract__factory {
    return super.connect(runner) as TargetContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TargetContractInterface {
    return new Interface(_abi) as TargetContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TargetContract {
    return new Contract(address, _abi, runner) as unknown as TargetContract;
  }
}
