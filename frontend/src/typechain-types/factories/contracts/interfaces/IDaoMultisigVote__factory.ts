/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IDaoMultisigVote,
  IDaoMultisigVoteInterface,
} from "../../../contracts/interfaces/IDaoMultisigVote";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "daoURI_",
        type: "string",
      },
      {
        internalType: "address[]",
        name: "members_",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "minimalDuration_",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint16",
            name: "numerator",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "denominator",
            type: "uint16",
          },
        ],
        internalType: "struct Fraction",
        name: "quorumFraction_",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint16",
            name: "numerator",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "denominator",
            type: "uint16",
          },
        ],
        internalType: "struct Fraction",
        name: "minimumParticipationFraction_",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IDaoMultisigVote__factory {
  static readonly abi = _abi;
  static createInterface(): IDaoMultisigVoteInterface {
    return new Interface(_abi) as IDaoMultisigVoteInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IDaoMultisigVote {
    return new Contract(address, _abi, runner) as unknown as IDaoMultisigVote;
  }
}
